//
//  QuizInteractor.swift
//  ComicQuiz
//
//  Created by Knpblo on 9/11/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HeroBusinessLogic
{
  func doSignInName(request: Hero.SignInName.Request)
  func doSelectedHero(request: Hero.SelectHero.Request)
}

protocol HeroDataStore
{
  var name: String { get set }
    var heroName: String { get set }
    var alterEgo: String { get set }
    var heroImage: UIImage! { get set }
    var heroBG: UIImage! {get set}
}

class QuizInteractor: HeroBusinessLogic, HeroDataStore
{
  var presenter: HeroPresentationLogic?
  var worker: HeroWorker?
    
  var name: String = ""
  var heroName:String = ""
  var alterEgo:String = ""
    
  var heroImage: UIImage!
  var heroBG: UIImage!
 
  // MARK: Do something
  
  func doSignInName(request: Hero.SignInName.Request)
  {
    let response = Hero.SignInName.Response(name: name)
    presenter?.presentSignInName(response: response)
  }
    
    func doSelectedHero(request: Hero.SelectHero.Request)
    {
        let hero = request.hero
        
        if hero == .CaptainAmerica{
            heroName = "Captain America"
            alterEgo = "Steven Grant Rogers"
            heroImage = UIImage(named: "Captain")
            heroBG = UIImage(named: "CaptainProp")
        }
        
        else if hero == .IronMan{
            heroName = "Iron Man"
            alterEgo = "Anthony Edward (Tony Stark)"
            heroImage = UIImage(named: "IronMan")
            heroBG = UIImage(named: "IronmanProp")
        }
        
        else if hero == .SpiderMan{
            heroName = "Spider Man"
            alterEgo = "Peter Benjamin Parker"
            heroImage = UIImage(named: "SpiderMan")
            heroBG = UIImage(named: "SpiderProp")
        }
        
        else if hero == .Thor{
            heroName = "Thor"
            alterEgo = "Thor Odinson"
            heroImage = UIImage(named: "Thor")
            heroBG = UIImage(named: "ThorProp")
        }
        
        let response = Hero.SelectHero.Response(hero: hero, heroName: heroName, alterEgo: alterEgo, heroImage: heroImage!, heroBG: heroBG!)
        presenter?.presentSelectedHero(response: response)
    }
}

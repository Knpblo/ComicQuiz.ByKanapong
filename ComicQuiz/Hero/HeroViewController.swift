//
//  QuizViewController.swift
//  ComicQuiz
//
//  Created by Knpblo on 9/11/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HeroDisplayLogic: AnyObject
{
  func displaySignInName(viewModel: Hero.SignInName.ViewModel)
  func displaySelectedHero(viewModel: Hero.SelectHero.ViewModel)
}

class HeroViewController: UIViewController, HeroDisplayLogic
{
  var interactor: HeroBusinessLogic?
  var router: (NSObjectProtocol & HeroRoutingLogic & HeroDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = QuizInteractor()
    let presenter = HeroPresenter()
    let router = QuizRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSignInName()
    doSelectedHero()
  }
  
  // MARK: Do something
    
    @IBOutlet weak var nameSignIn: UILabel!
    @IBOutlet weak var HeroName: UILabel!
    @IBOutlet weak var AlterEgo: UILabel!
    
    @IBOutlet weak var swCaptainAmerica: UISwitch!
    @IBOutlet weak var swIronMan: UISwitch!
    @IBOutlet weak var swSpiderMan: UISwitch!
    @IBOutlet weak var swThor: UISwitch!
    
    @IBOutlet weak var HeroImage: UIImageView!
    @IBOutlet weak var HeroBG: UIImageView!
    
    @IBAction func toDetail(_ sender: UIButton) {
        router?.routeToDetail(segue:nil)
    }
    
    @IBAction func CaptainAmericaValueChange(_ sender: UISwitch) {
        let request = Hero.SelectHero.Request(hero: .CaptainAmerica)
        interactor?.doSelectedHero(request: request)
    }
    
    @IBAction func IronManValueChange(_ sender: UISwitch) {
        let request = Hero.SelectHero.Request(hero: .IronMan)
        interactor?.doSelectedHero(request: request)
    }
    
    @IBAction func SpiderManValueChange(_ sender: UISwitch) {
        let request = Hero.SelectHero.Request(hero: .SpiderMan)
        interactor?.doSelectedHero(request: request)
    }
    
    
    @IBAction func ThorValueChange(_ sender: UISwitch) {
        let request = Hero.SelectHero.Request(hero: .Thor)
        interactor?.doSelectedHero(request: request)
    }
    
    
  func doSignInName()
  {
    let request = Hero.SignInName.Request()
    interactor?.doSignInName(request: request)
  }
    
    func doSelectedHero()
    {
      let request = Hero.SelectHero.Request(hero: .CaptainAmerica)
      interactor?.doSelectedHero(request: request)
    }
  
    func displaySignInName(viewModel:Hero.SignInName.ViewModel)
  {
    nameSignIn.text = viewModel.name
  }
    
    func displaySelectedHero(viewModel:Hero.SelectHero.ViewModel)
  {
      HeroName.text = viewModel.heroName
      AlterEgo.text = viewModel.alterEgo
      HeroImage.image = viewModel.heroImage
      HeroBG.image = viewModel.heroBG
      
      swCaptainAmerica.isOn = viewModel.isCaptainAmericaOpen
      swIronMan.isOn = viewModel.isIronManOpen
      swSpiderMan.isOn = viewModel.isSpiderManOpen
      swThor.isOn = viewModel.isThorOpen
  }
}
